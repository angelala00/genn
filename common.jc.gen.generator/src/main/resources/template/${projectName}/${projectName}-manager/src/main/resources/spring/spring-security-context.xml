<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
	<debug /><!-- 这里是？ -->
	<global-method-security pre-post-annotations="enabled" />

	<http pattern="/resources/**" security="none" />
	<http pattern="/favicon.ico" security="none" />
	<http pattern="/static/**" security="none" />
	<http pattern="/loggedout.jsp" security="none" />
	
	<http pattern="/login" security="none" />

	<http use-expressions="true">
		<intercept-url pattern="/secure/extreme/**" access="hasRole('supervisor')" />
		<intercept-url pattern="/**" access="hasRole('manager')" />
		<!-- Allow all other requests. In a real application you should adopt a whitelisting approach where access is not allowed by default -->
		<!-- <intercept-url pattern="/**" access="permitAll" /> -->
<!-- 		<form-login default-target-url="/user/login/in" username-parameter="username" password-parameter="password" login-page="/login" authentication-failure-url="/user/login/fail" /> -->
		<form-login login-page="/login"/>
		<logout logout-success-url="/" delete-cookies="JSESSIONID" />
		<remember-me />
		<!-- Uncomment to enable X509 client authentication support <x509 /> -->
		<!-- Uncomment to limit the number of sessions a user can have -->
<!-- 		<session-management invalid-session-url="/timeout.jsp"> -->
<!-- 			<concurrency-control max-sessions="1" error-if-maximum-exceeded="false" /> -->
<!-- 		</session-management> -->
        <session-management invalid-session-url="/login">
            <concurrency-control max-sessions="500" error-if-maximum-exceeded="true"/>
        </session-management>
	</http>

	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<beans:bean id="userDetailsService" class="${targetPackage}.manager.auth.AuthServiceImpl" />
	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder ref="encoder" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>
